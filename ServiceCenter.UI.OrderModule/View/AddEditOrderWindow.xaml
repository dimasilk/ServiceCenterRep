<Window x:Class="ServiceCenter.UI.OrderModule.View.AddEditOrderWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ServiceCenter.UI.OrderModule.View"
             xmlns:behaviors="clr-namespace:ServiceCenter.UI.Infrastructure.Behaviors;assembly=ServiceCenter.UI.Infrastructure"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             behaviors:DialogWindowBehavior.DialogResult="{Binding DialogResult}" behaviors:DialogWindowBehavior.DialogResultData="{Binding DialogResultData}"
             Background="{StaticResource ControlBackgroundNormal}">
    
    <Window.Resources>
            
            <HierarchicalDataTemplate x:Key="PriceTemplate" ItemsSource="{Binding Path=Childs}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding PricelistDto.Name}" />
                <TextBlock Grid.Column="1" Text="{Binding PricelistDto.Price}" />
                    
            </Grid>
        </HierarchicalDataTemplate>
        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="behaviors:MouseDoubleClickCommandBehaviour.DoubleClickCommand" Value="{Binding RelativeSource={RelativeSource AncestorType=TreeView}, Path=DataContext.DoubleClickOnPriceItemCommand}"/>
            <Setter Property="behaviors:MouseDoubleClickCommandBehaviour.DoubleClickCommandParameter" Value="{Binding}"/>
        </Style>
        <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
            <Setter Property="behaviors:MouseDoubleClickCommandBehaviour.DoubleClickCommand" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.DoubleClickOnSelectedPriceItemCommand}"/>
            <Setter Property="behaviors:MouseDoubleClickCommandBehaviour.DoubleClickCommandParameter" Value="{Binding}"/>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="4,0,0,0"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="4,0,4,0"/>
            <Setter Property="Height" Value="36"/>
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="4,0,4,0"/>
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="4,0,4,0"/>
            <Setter Property="Height" Value="36"/>
        </Style>
        <Style TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="4,0,4,0"/>
            <Setter Property="Height" Value="36"/>
        </Style>
        <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="4"></Setter>
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="TextBlock.FontSize" Value="16"></Setter>
            <Setter Property="TextBlock.Foreground" Value="{StaticResource FillPath}"></Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" Grid.Row="0" Header="Device info">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Device:"/>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="Model:"/>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Manufacturer:"/>
                <TextBlock Grid.Column="0" Grid.Row="3" Text="SerialNumber"/>
                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Item.Device, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Item.DeviceModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Item.Manufacturer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Item.SerialNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Column="1" Grid.Row="0" Header="Order info">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Status:"/>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="Urgently:"/>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Order recieved:"/>
                <TextBlock Grid.Column="0" Grid.Row="3" Text="Order ready"/>
                <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Path=Statuses}" DisplayMemberPath="StatusValue" SelectedItem="{Binding Path=Item.Status, Mode=TwoWay}"/>
                <CheckBox Grid.Column="1" Grid.Row="1" IsChecked="{Binding Item.Urgently, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DatePicker Grid.Column="1" Grid.Row="2" SelectedDate="{Binding Item.DateRecieved, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DatePicker Grid.Column="1" Grid.Row="3" SelectedDate="{Binding Item.DateReady, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </GroupBox>
        
        <GroupBox Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Header="Selected services (double click for add service)">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DataGrid Grid.Column="0" Grid.Row="0" ItemsSource="{Binding Path=SelectedPricelistItems}" AutoGenerateColumns="False" IsReadOnly="True" HeadersVisibility="None" 
                  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalGridLinesBrush="Transparent" HorizontalGridLinesBrush="Transparent" SelectionUnit="FullRow">
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding Name}"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding Price}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>

                <TreeView Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Path=Prices}" ItemTemplate="{StaticResource PriceTemplate}" />
            </Grid>
        </GroupBox>


        <Grid Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right">
            <Grid.RowDefinitions >
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Grid.Row="0"  x:Name="OkClickButton" Content="ОК" Command="{Binding OkCommand}"/>
            <Button Grid.Column="1" Grid.Row="0"  x:Name="CancelClickButton" Content="Cancel" Command="{Binding CancelCommand}"/>
        </Grid>
    </Grid>
</Window>

