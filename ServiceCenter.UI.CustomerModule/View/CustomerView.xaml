<Window x:Class="ServiceCenter.UI.CustomerModule.View.CustomerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:behaviors="clr-namespace:ServiceCenter.UI.Infrastructure.Behaviors;assembly=ServiceCenter.UI.Infrastructure"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
            xmlns:myns="clr-namespace:ServiceCenter.UI.Infrastructure.Validation;assembly=ServiceCenter.UI.Infrastructure"

             behaviors:DialogWindowBehavior.DialogResult="{Binding DialogResult}" behaviors:DialogWindowBehavior.DialogResultData="{Binding DialogResultData}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Window.Resources>
        <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
            <Setter Property="behaviors:MouseDoubleClickCommandBehaviour.DoubleClickCommand" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.DoubleClickOnCustomerCommand}"/>
            <Setter Property="behaviors:MouseDoubleClickCommandBehaviour.DoubleClickCommandParameter" Value="{Binding}"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="4,0,4,0"/>
            <Setter Property="Height" Value="36"/>
        </Style>
        <Style TargetType="xctk:MaskedTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="4,0,4,0"/>
            <Setter Property="Height" Value="36"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" Grid.Row="0" Header="Customer info">
            <Grid DataContext="{Binding Item}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Full name:"/>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="Info:"/>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Phone:"/>
                    <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding FullName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger  EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding RelativeSource = {RelativeSource AncestorType=GroupBox}, Path = DataContext.SearchCustomerCommand, Mode=OneWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger  EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding RelativeSource = {RelativeSource AncestorType=GroupBox}, Path = DataContext.SearchCustomerCommand, Mode=OneWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <xctk:MaskedTextBox Name="PhoneBox" Grid.Column="1" Grid.Row="2"  Mask="+375 (00) 000-00-00" Validation.ErrorTemplate="{StaticResource TextBoxValidationTemplate}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger  EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding RelativeSource = {RelativeSource AncestorType=GroupBox}, Path = DataContext.SearchCustomerCommand, Mode=OneWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers> 
                    <xctk:MaskedTextBox.Text>
                        <Binding Path="Phone" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <myns:PhoneValidationRule ValidatesOnTargetUpdated="True"/>
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </xctk:MaskedTextBox.Text>
                    

                </xctk:MaskedTextBox>
            </Grid>
        </GroupBox>

       
        <Grid Grid.Row="1" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <DataGrid Grid.Column="0" Grid.Row="0" ItemsSource="{Binding Path=CustomerFilteredCollection}" AutoGenerateColumns="False" IsReadOnly="True" HeadersVisibility="None" 
                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalGridLinesBrush="Transparent" HorizontalGridLinesBrush="Transparent" SelectionUnit="FullRow">
                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Binding="{Binding Item.FullName}"/>
                    <DataGridTextColumn IsReadOnly="True" Binding="{Binding Item.Phone}"/>
                    <DataGridTextColumn IsReadOnly="True" Binding="{Binding Item.Info}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right">
            <Grid.RowDefinitions >
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Grid.Row="0"  x:Name="OkClickButton" Content="ОК" Command="{Binding OkCommand}">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource BooleanOrConverter}" ConverterParameter="not">
                        <Binding ElementName="PhoneBox" Path="(Validation.HasError)"></Binding>
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            <Button Grid.Column="1" Grid.Row="0"  x:Name="CancelClickButton" Content="Cancel" Command="{Binding CancelCommand}"/>
        </Grid>
    </Grid>
</Window>
